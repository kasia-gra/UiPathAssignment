<Activity mc:Ignorable="sap sap2010" x:Class="CreateNewVendor" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_OfficeSamuraiERPInputMappingDictionary" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="io_TransactionItem" Type="InOutArgument(sd:DataRow)" />
    <x:Property Name="out_VendorNumber" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>763.2,2792</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>CreateNewVendor_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="27">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="26">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="OfficeSamuraiERPCreateNewVendor" sap:VirtualizedContainerService.HintSize="601.6,2727.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="Office Samurai ERP Create New Vendor" Name="ComponentName" />
      <Variable x:TypeArguments="x:String" Name="VendorCreationNotificationText" />
      <Variable x:TypeArguments="x:Boolean" Name="VendorCreationNotificationTextExists" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="560,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Start: &quot; + ComponentName]" />
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Key in OfficeSamuraiERPInputMappingDictionary assign appropriate value to complete details in system" sap:VirtualizedContainerService.HintSize="560,988.8" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[in_OfficeSamuraiERPInputMappingDictionary.Keys]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="OfficeSamuraiERPFieldLabel" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Set Text appropriate field based on Mapping Dictionary" sap:VirtualizedContainerService.HintSize="524.8,854.4" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="CompletedFieldText" />
              <Variable x:TypeArguments="x:String" Name="FieldValue" />
              <Variable x:TypeArguments="x:String" Name="ColumnNameBasedOnMapping" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign ColumnNameBasedOnMapping" sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[ColumnNameBasedOnMapping]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[in_OfficeSamuraiERPInputMappingDictionary(OfficeSamuraiERPFieldLabel)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign FieldValue" sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[FieldValue]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[io_TransactionItem(ColumnNameBasedOnMapping).ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:SetValue AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Set Text appropriate field based on Mapping Dictionary" sap:VirtualizedContainerService.HintSize="483.2,135.2" sap2010:WorkflowViewState.IdRef="SetValue_1" Text="[FieldValue]">
              <ui:SetValue.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3f92ce94-aa0b-4780-bbc4-ab881b89b6a2" InformativeScreenshot="d72c46bacd69221a757bf48064217531" Selector="[String.Format(&quot;&lt;wnd app='office samurai dev training app 02.exe' ctrlname='formMain' /&gt;&lt;wnd ctrlname='Panel1' /&gt;&lt;wnd ctrlname='panelCreate' /&gt;&lt;wnd ctrlname='panelForm' /&gt;&lt;wnd ctrlname='{0}' /&gt;&quot;, OfficeSamuraiERPFieldLabel)]" WaitForReady="COMPLETE">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                </ui:Target>
              </ui:SetValue.Target>
            </ui:SetValue>
            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get completed field value" sap:VirtualizedContainerService.HintSize="483.2,107.2" sap2010:WorkflowViewState.IdRef="GetValue_1">
              <ui:GetValue.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="eacfa5a1-28de-4d66-bded-422ed117c8f2" InformativeScreenshot="9bad38eb5a4415a2b951be6d7f98eadc" Selector="[String.Format(&quot;&lt;wnd app='office samurai dev training app 02.exe' ctrlname='formMain' /&gt;&lt;wnd ctrlname='Panel1' /&gt;&lt;wnd ctrlname='panelCreate' /&gt;&lt;wnd ctrlname='panelForm' /&gt;&lt;wnd ctrlname='{0}' /&gt;&quot;, OfficeSamuraiERPFieldLabel)]" WaitForReady="COMPLETE">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                </ui:Target>
              </ui:GetValue.Target>
              <ui:GetValue.Value>
                <OutArgument x:TypeArguments="x:String">[CompletedFieldText]</OutArgument>
              </ui:GetValue.Value>
            </ui:GetValue>
            <If Condition="[Not CompletedFieldText.Equals(FieldValue)]" DisplayName="IfNot CompletedFieldText.Equals(FieldValue) throw exception" sap:VirtualizedContainerService.HintSize="483.2,239.2" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Throw DisplayName="Throw SE" Exception="[New SystemException(ComponentName + &quot; - not able to set value in field: &quot; + OfficeSamuraiERPFieldLabel + &quot; selected value is: &quot; + CompletedFieldText + &quot;,  shoudl be set to: &quot; +FieldValue )]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click  Create VDM record " sap:VirtualizedContainerService.HintSize="560,107.2" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="False">
      <ui:Click.CursorPosition>
        <ui:CursorPosition Position="Center">
          <ui:CursorPosition.OffsetX>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:CursorPosition.OffsetX>
          <ui:CursorPosition.OffsetY>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:CursorPosition.OffsetY>
        </ui:CursorPosition>
      </ui:Click.CursorPosition>
      <ui:Click.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="afec83dc-f845-415b-a7d4-f4ebe3f0c707" InformativeScreenshot="ce55db1daa7f5508cf9f7de1fc6ee0e4" Selector="&lt;wnd app='office samurai dev training app 02.exe' ctrlname='formMain' /&gt;&lt;wnd ctrlname='Panel1' /&gt;&lt;wnd ctrlname='panelCreate' /&gt;&lt;wnd ctrlname='buttonCreateRecord' /&gt;" WaitForReady="COMPLETE">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
        </ui:Target>
      </ui:Click.Target>
    </ui:Click>
    <ui:UiElementExists DisplayName="Element VendorCreationNotificationTextExists" Exists="[VendorCreationNotificationTextExists]" sap:VirtualizedContainerService.HintSize="560,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
      <ui:UiElementExists.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="183b84b1-fd3c-4324-ac38-f0c571129994" InformativeScreenshot="8a87bffc41438ece834240a6c598cc99" Selector="&lt;wnd app='office samurai dev training app 02.exe' cls='#32770' title='Transaction*' /&gt;&lt;wnd ctrlid='65535' cls='Static' /&gt;" TimeoutMS="5000" WaitForReady="COMPLETE" />
      </ui:UiElementExists.Target>
    </ui:UiElementExists>
    <If Condition="[Not VendorCreationNotificationTextExists]" DisplayName="If Not VendorCreationNotificationTextExists throw an exception" sap:VirtualizedContainerService.HintSize="560,239.2" sap2010:WorkflowViewState.IdRef="If_3">
      <If.Then>
        <Throw DisplayName="Throw SE" Exception="[New SystemException(ComponentName + &quot; - Notification about  Vendor creation did not appear as expected (neither success nor failed)&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_3" />
      </If.Then>
    </If>
    <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get VendorCreationNotificationText " sap:VirtualizedContainerService.HintSize="560,107.2" sap2010:WorkflowViewState.IdRef="GetValue_2">
      <ui:GetValue.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="956d16e7-6e12-4fbf-9ddf-8a976d0c78f6" InformativeScreenshot="0d3d54971a98388e8ea93ef8715ea320" Selector="&lt;wnd app='office samurai dev training app 02.exe' cls='#32770' title='Transaction*' /&gt;&lt;wnd ctrlid='65535' cls='Static' /&gt;" WaitForReady="COMPLETE">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
        </ui:Target>
      </ui:GetValue.Target>
      <ui:GetValue.Value>
        <OutArgument x:TypeArguments="x:String">[VendorCreationNotificationText]</OutArgument>
      </ui:GetValue.Value>
    </ui:GetValue>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="560,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Notification appeard: &quot; + VendorCreationNotificationText]" />
    <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click OK button" sap:VirtualizedContainerService.HintSize="560,107.2" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
      <ui:Click.CursorPosition>
        <ui:CursorPosition Position="Center">
          <ui:CursorPosition.OffsetX>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:CursorPosition.OffsetX>
          <ui:CursorPosition.OffsetY>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:CursorPosition.OffsetY>
        </ui:CursorPosition>
      </ui:Click.CursorPosition>
      <ui:Click.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="95ba6b99-c078-4640-9a3f-872a7e6a1272" InformativeScreenshot="618e2150f348601f1eb7c7f625fd2ddd" Selector="&lt;wnd app='office samurai dev training app 02.exe' cls='#32770' title='Transaction*' /&gt;&lt;wnd ctrlid='2' title='OK' cls='Button' /&gt;" WaitForReady="COMPLETE">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
        </ui:Target>
      </ui:Click.Target>
    </ui:Click>
    <If Condition="[Not VendorCreationNotificationText.Contains(&quot;Vendor created succesfuly at number&quot;)]" DisplayName="If Not VendorCreationNotificationText.ToLower.Contains(&quot;Vendor created&quot;) throw System Exception" sap:VirtualizedContainerService.HintSize="560,239.2" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <Throw DisplayName="Throw SE" Exception="[New SystemException(ComponentName + &quot; - &quot; +  VendorCreationNotificationText)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_2" />
      </If.Then>
    </If>
    <Assign DisplayName="Assign out_VendorNumber" sap:VirtualizedContainerService.HintSize="560,60" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_VendorNumber]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[VendorCreationNotificationText.Replace("Vendor created succesfuly at number ","").Trim]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="560,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;End: &quot; + ComponentName]" />
  </Sequence>
</Activity>